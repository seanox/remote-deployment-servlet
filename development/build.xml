<?xml version="1.0" ?>
<project name="remote-deployment" default="usage" basedir="..">
  <target name="usage">
    <echo>                                                          </echo>
    <echo> the following targets are available ...                  </echo>
    <echo>                                                          </echo>
    <echo>   changes    synchronizes the README.md with CHANGES     </echo>
    <echo>                                                          </echo>
    <echo>   release    Builds the complete release                 </echo>
    <echo>              Synchronizes the version in README.md       </echo>
  </target>

  <property name="workspace" value="${basedir}"/>
  <property name="workspace.sources" value="${workspace}/src"/>
  <property name="workspace.development" value="${workspace}/development"/>
  <property name="workspace.target" value="${workspace}/target"/>
  <property name="workspace.releases" value="${workspace}/releases"/>

  <macrodef name="release-locate">
    <sequential>
      <copy file="CHANGES" tofile="CHANGES.tmp" overwrite="true"/>
      <replaceregexp file="CHANGES.tmp"
          match="(?s)^\s*([\d\.x]+) (\d{4})([\dx]+).*$" flags="g" byline="false"
          replace="release.version=\1&#x000D;release.year=\2&#x000D;release.date=\2\3&#x000D;"/>
      <replaceregexp file="CHANGES.tmp" match="x+" replace="0000" flags="g" byline="false"/>
      <loadproperties srcfile="CHANGES.tmp"/>
      <delete file="CHANGES.tmp"/>
      <echo file="CHANGES.tmp" message="release.major=${release.version}"/>
      <replaceregexp file="CHANGES.tmp"
          match="(?&lt;=\d+)\." byline="true" replace="&#x000D;release.minor="/>
      <replaceregexp file="CHANGES.tmp"
          match="(?&lt;=\d+)\." byline="true" replace="&#x000D;release.patch="/>
      <loadproperties srcfile="CHANGES.tmp"/>
      <delete file="${workspace}/CHANGES.tmp"/>
    </sequential>
  </macrodef>

  <target name="changes">
    <release-locate/>

    <replaceregexp file="${workspace}/CHANGES" match="&#x00E4;" replace="ae" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00C4;" replace="Ae" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00F6;" replace="oe" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00D6;" replace="Oe" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00FC;" replace="ue" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00DC;" replace="Ue" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="\s+$" replace="" flags="g" byline="true"/>

    <copy file="${workspace}/CHANGES" tofile="${workspace}/CHANGES.tmp" overwrite="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^\s+" replace="" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="(?s)^(.*?)[\r\n]+\d[\d\. x]+.*$" replace="\1" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(.*?)\s*$" replace="\1  " flags="g" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(\d[\.\d x]+)[^\r\n]*" replace="## \1" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^ {0,4}([A-Z]+:.*)\s*$" replace="\1" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="(?s)[\r\n]+ [^\r\n]+" replace="" flags="g" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(## \d[\.\d]+ \d+)(  )" replace="\1 (summary of the current version)\2" flags="g" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(## \d[\.\d]+ [\dx]+)(  )" replace="\1 (summary of the next version)\2" flags="g" byline="true"/>
    <loadresource property="changes">
      <file file="${workspace}/CHANGES.tmp"/>
    </loadresource>
    <delete file="${workspace}/CHANGES.tmp"/>
    <replaceregexp file="${workspace}/README.md"
        match="(?si)(# Changes \(Change Log\)\s+).*?(\[Read more\])" flags="g" byline="false"
        replace="\1${changes}${line.separator}${line.separator}\2"/>
    <tstamp>
      <format property="now.year" pattern="yyyy"/>
    </tstamp>
    <replaceregexp file="${workspace}/README.md"
        match="(?si)(?&lt;=\(C\)\s)\d{4}\b" flags="g" byline="true"
        replace="${now.year}"/>

    <replaceregexp file="${workspace}/pom.xml" flags="g" byline="false"
        match="(?si)(&lt;artifactId&gt;seanox-${ant.project.name}&lt;/artifactId&gt;\s*&lt;version&gt;)[\d\.]+(&lt;/version&gt;)"
        replace="\1${release.version}\2"/>
  </target>

  <target name="release" depends="changes">
    <release-locate/>
    <replaceregexp file="${workspace}/src/main/java/com/seanox/RemoteDeploymentPush.java"
        match="(\[Version)[\d\s\.]+(\])" flags="g" byline="false"
        replace="\1 ${release.version} ${release.date}\2"/>
    <replaceregexp file="${workspace}/pom.xml" flags="g" byline="false"
        match="(?si)(&lt;artifactId&gt;seanox-${ant.project.name}&lt;/artifactId&gt;\s*&lt;version&gt;)[\d\.]+(&lt;/version&gt;)"
        replace="\1${release.version}\2"/>
    <replaceregexp file="${workspace}/README.md"
        match="(?si)(&lt;version&gt;)[\.\d\s]+(&lt;/version&gt;)" flags="g" byline="true"
        replace="\1${release.version}\2"/>
    <replaceregexp file="${workspace}/README.md"
        match="(?si)(seanox-${ant.project.name}-)[\.\d]+(\.jar)" flags="g" byline="true"
        replace="\1${release.version}\2"/>
    <exec executable="cmd">
      <arg value="/c"/>
      <arg value="mvn clean deploy"/>
    </exec>
  </target>
</project>